#include <iostream>
using namespace std;

const int M = 20;
void EnterMatrix(int[][M], int n, int m);
void DisplayMatrix(int[][M], int n, int m);
void ToRemoveRow(int[][M], int &n, int m, int num);
void Work(int[][M], int &n, int m);

int main()
{
	while (true){
		int matrix[M][M] = { { 0 } };
		int n, m;
		while (true)
		{
			cout << "Enter n: " << endl;
			cin >> n;
			cout << "Enter m <=" << M << endl;
			cin >> m;
			if (n > 0 && n <= M && m <= M);
			{
				break;
			}
			system("pause");
			return 0;
		}
		EnterMatrix(matrix, n, m);

		cout << endl;
		cout << "Sourse matrix: ";
		cout << endl;
		DisplayMatrix(matrix, n, m);
		cout << endl;

		Work(matrix, n, m);

		cout << "Changed matrix: ";
		cout << endl;
		DisplayMatrix(matrix, n, m);

		char yes;
		cout << "Would you like to countinie? Press y/Y: " << endl;
		cin >> yes;
		if (yes == 'y' || yes == 'Y')
			continue;
		break;
		system("cls");
		system("pause");
	}
	return 0;
}

void EnterMatrix(int a[][M], int n, int m)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			cout << "a[" << (i + 1) << "][" << (j + 1) << "]=";
			cin >> a[i][j];
		}
	}
}

void DisplayMatrix(int a[][M], int n, int m)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			cout.width(5);
			cout << a[i][j];
		}
		cout << endl;
	}
}

void ToRemoveRow(int a[][M], int &n, int m, int num)
{
	for (int i = num; i < n; i++)
	{

		for (int j = 0; j < m; j++)
			a[i][j] = a[i + 1][j];
	}
	n--;
}

void Work(int a[][M], int &n, int m)
{
	for (int i = 0; i < n; i++)
	{
		int j = 0;
		for (; j < m; j++)
		{
			if (a[i][j] != 0) break;
		}
		if (j == m)
		{
			ToRemoveRow(a, n, m, i);
		}
	}
}
